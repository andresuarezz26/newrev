{"ast":null,"code":"var _jsxFileName = \"/Users/gerardosuarez/Documents/aider-source-code/aider/client/src/components/ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, TextField, Paper, Typography, Box, Divider, CircularProgress, IconButton } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport api, { socket, SESSION_ID } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInitializing, setIsInitializing] = useState(true);\n  const [streamingContent, setStreamingContent] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Effect to initialize the session\n  useEffect(() => {\n    const initSession = async () => {\n      try {\n        const response = await api.initSession();\n        if (response.status === 'success') {\n          setMessages(response.messages || []);\n        }\n        setIsInitializing(false);\n      } catch (error) {\n        console.error('Failed to initialize session:', error);\n        setIsInitializing(false);\n      }\n    };\n    initSession();\n  }, []);\n\n  // Effect to set up socket listeners\n  useEffect(() => {\n    // Message chunk handler\n    const handleMessageChunk = data => {\n      console.log('Message chunk received:', data);\n      if (data.session_id === SESSION_ID) {\n        console.log('Setting streaming content:', data.chunk);\n        setStreamingContent(prev => prev + (data.chunk || ''));\n      }\n    };\n\n    // Message complete handler\n    const handleMessageComplete = data => {\n      console.log('Message complete received:', data);\n      if (data.session_id === SESSION_ID) {\n        console.log('Message complete received:', data);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: streamingContent\n        }]);\n        setStreamingContent('');\n        setIsLoading(false);\n      }\n    };\n\n    // Files edited handler\n    const handleFilesEdited = data => {\n      if (data.session_id === SESSION_ID) {\n        setMessages(prev => [...prev, {\n          role: 'info',\n          content: `Files edited: ${data.files.join(', ')}`\n        }]);\n      }\n    };\n\n    // Commit handler\n    const handleCommit = data => {\n      if (data.session_id === SESSION_ID) {\n        setMessages(prev => [...prev, {\n          role: 'commit',\n          content: `Commit: ${data.hash}\\nMessage: ${data.message}`,\n          hash: data.hash,\n          message: data.message,\n          diff: data.diff\n        }]);\n      }\n    };\n\n    // Set up socket event listeners\n    socket.on('message_chunk', handleMessageChunk);\n    socket.on('message_complete', handleMessageComplete);\n    socket.on('files_edited', handleFilesEdited);\n    socket.on('commit', handleCommit);\n\n    // Clean up event listeners\n    return () => {\n      socket.off('message_chunk', handleMessageChunk);\n      socket.off('message_complete', handleMessageComplete);\n      socket.off('files_edited', handleFilesEdited);\n      socket.off('commit', handleCommit);\n    };\n  }, [streamingContent]);\n\n  // Effect to scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages, streamingContent]);\n\n  // Handle send message\n  const handleSendMessage = async e => {\n    console.log('Sending message:', input);\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const userMessage = input;\n    setInput('');\n    setIsLoading(true);\n\n    // Add user message immediately\n    setMessages(prev => [...prev, {\n      role: 'user',\n      content: userMessage\n    }]);\n    try {\n      await api.sendMessage(userMessage);\n      // The response will come via socket events\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setIsLoading(false);\n\n      // Add error message\n      setMessages(prev => [...prev, {\n        role: 'error',\n        content: 'Failed to send message. Please try again.'\n      }]);\n    }\n  };\n\n  // Render message based on role\n  const renderMessage = (message, index) => {\n    const {\n      role,\n      content\n    } = message;\n    let backgroundColor;\n    let textColor = '#000';\n    switch (role) {\n      case 'user':\n        backgroundColor = '#e3f2fd';\n        break;\n      case 'assistant':\n        backgroundColor = '#f1f8e9';\n        break;\n      case 'info':\n        backgroundColor = '#fff8e1';\n        break;\n      case 'error':\n        backgroundColor = '#ffebee';\n        textColor = '#c62828';\n        break;\n      case 'commit':\n        backgroundColor = '#e8f5e9';\n        break;\n      default:\n        backgroundColor = '#f5f5f5';\n    }\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 1,\n      style: {\n        padding: '10px 15px',\n        marginBottom: '10px',\n        backgroundColor,\n        color: textColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        display: \"block\",\n        gutterBottom: true,\n        children: role.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), role === 'commit' && message.diff && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: () => alert('Undo not implemented yet'),\n          children: \"Undo Commit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"pre\",\n          style: {\n            marginTop: '10px',\n            padding: '10px',\n            backgroundColor: '#f5f5f5',\n            overflowX: 'auto',\n            fontSize: '0.8rem'\n          },\n          children: message.diff\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      maxWidth: '800px',\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        p: 2,\n        borderBottom: '1px solid #e0e0e0'\n      },\n      children: \"Aider Browser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), isInitializing ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          p: 2,\n          overflowY: 'auto'\n        },\n        children: [messages.map(renderMessage), streamingContent && /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 1,\n          style: {\n            padding: '10px 15px',\n            marginBottom: '10px',\n            backgroundColor: '#f1f8e9'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            display: \"block\",\n            gutterBottom: true,\n            children: \"ASSISTANT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            style: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: streamingContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSendMessage,\n        sx: {\n          p: 2,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message here...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          type: \"submit\",\n          color: \"primary\",\n          disabled: isLoading || !input.trim(),\n          sx: {\n            ml: 1\n          },\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"h9iECZ5i5Dsp8H8u5QC2RsylY28=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","TextField","Paper","Typography","Box","Divider","CircularProgress","IconButton","SendIcon","api","socket","SESSION_ID","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatInterface","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","isInitializing","setIsInitializing","streamingContent","setStreamingContent","messagesEndRef","initSession","response","status","error","console","handleMessageChunk","data","log","session_id","chunk","prev","handleMessageComplete","role","content","handleFilesEdited","files","join","handleCommit","hash","message","diff","on","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","userMessage","sendMessage","renderMessage","index","backgroundColor","textColor","elevation","style","padding","marginBottom","color","children","variant","display","gutterBottom","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","whiteSpace","mt","size","onClick","alert","component","marginTop","overflowX","fontSize","sx","flexDirection","height","maxWidth","mx","p","borderBottom","justifyContent","alignItems","flex","overflowY","map","ref","onSubmit","fullWidth","value","onChange","target","placeholder","disabled","type","ml","_c","$RefreshReg$"],"sources":["/Users/gerardosuarez/Documents/aider-source-code/aider/client/src/components/ChatInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Button, TextField, Paper, Typography, Box, Divider, CircularProgress, IconButton } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport api, { socket, SESSION_ID } from '../services/api';\n\nconst ChatInterface = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInitializing, setIsInitializing] = useState(true);\n  const [streamingContent, setStreamingContent] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Effect to initialize the session\n  useEffect(() => {\n    const initSession = async () => {\n      try {\n        const response = await api.initSession();\n        if (response.status === 'success') {\n          setMessages(response.messages || []);\n        }\n        setIsInitializing(false);\n      } catch (error) {\n        console.error('Failed to initialize session:', error);\n        setIsInitializing(false);\n      }\n    };\n\n    initSession();\n  }, []);\n\n  // Effect to set up socket listeners\n  useEffect(() => {\n    // Message chunk handler\n    const handleMessageChunk = (data) => {\n      console.log('Message chunk received:', data);\n      if (data.session_id === SESSION_ID) {\n        console.log('Setting streaming content:', data.chunk);\n        setStreamingContent((prev) => prev + (data.chunk || ''));\n      }\n    };\n\n    // Message complete handler\n    const handleMessageComplete = (data) => {\n      console.log('Message complete received:', data);\n      if (data.session_id === SESSION_ID) {\n        console.log('Message complete received:', data);\n        setMessages((prev) => [\n          ...prev,\n          { role: 'assistant', content: streamingContent }\n        ]);\n        setStreamingContent('');\n        setIsLoading(false);\n      }\n    };\n\n    // Files edited handler\n    const handleFilesEdited = (data) => {\n      if (data.session_id === SESSION_ID) {\n        setMessages((prev) => [\n          ...prev,\n          { \n            role: 'info', \n            content: `Files edited: ${data.files.join(', ')}` \n          }\n        ]);\n      }\n    };\n\n    // Commit handler\n    const handleCommit = (data) => {\n      if (data.session_id === SESSION_ID) {\n        setMessages((prev) => [\n          ...prev,\n          { \n            role: 'commit', \n            content: `Commit: ${data.hash}\\nMessage: ${data.message}`,\n            hash: data.hash,\n            message: data.message,\n            diff: data.diff\n          }\n        ]);\n      }\n    };\n\n    // Set up socket event listeners\n    socket.on('message_chunk', handleMessageChunk);\n    socket.on('message_complete', handleMessageComplete);\n    socket.on('files_edited', handleFilesEdited);\n    socket.on('commit', handleCommit);\n\n    // Clean up event listeners\n    return () => {\n      socket.off('message_chunk', handleMessageChunk);\n      socket.off('message_complete', handleMessageComplete);\n      socket.off('files_edited', handleFilesEdited);\n      socket.off('commit', handleCommit);\n    };\n  }, [streamingContent]);\n\n  // Effect to scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages, streamingContent]);\n\n  // Handle send message\n  const handleSendMessage = async (e) => {\n    console.log('Sending message:', input);\n    e?.preventDefault();\n    \n    if (!input.trim() || isLoading) return;\n    \n    const userMessage = input;\n    setInput('');\n    setIsLoading(true);\n    \n    // Add user message immediately\n    setMessages((prev) => [...prev, { role: 'user', content: userMessage }]);\n    \n    try {\n      await api.sendMessage(userMessage);\n      // The response will come via socket events\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setIsLoading(false);\n      \n      // Add error message\n      setMessages((prev) => [\n        ...prev,\n        { role: 'error', content: 'Failed to send message. Please try again.' }\n      ]);\n    }\n  };\n\n  // Render message based on role\n  const renderMessage = (message, index) => {\n    const { role, content } = message;\n    \n    let backgroundColor;\n    let textColor = '#000';\n    \n    switch (role) {\n      case 'user':\n        backgroundColor = '#e3f2fd';\n        break;\n      case 'assistant':\n        backgroundColor = '#f1f8e9';\n        break;\n      case 'info':\n        backgroundColor = '#fff8e1';\n        break;\n      case 'error':\n        backgroundColor = '#ffebee';\n        textColor = '#c62828';\n        break;\n      case 'commit':\n        backgroundColor = '#e8f5e9';\n        break;\n      default:\n        backgroundColor = '#f5f5f5';\n    }\n    \n    return (\n      <Paper \n        key={index} \n        elevation={1} \n        style={{ \n          padding: '10px 15px', \n          marginBottom: '10px',\n          backgroundColor,\n          color: textColor\n        }}\n      >\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\n          {role.toUpperCase()}\n        </Typography>\n        <Typography variant=\"body1\" style={{ whiteSpace: 'pre-wrap' }}>\n          {content}\n        </Typography>\n        \n        {role === 'commit' && message.diff && (\n          <Box mt={1}>\n            <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={() => alert('Undo not implemented yet')}>\n              Undo Commit\n            </Button>\n            <Typography \n              variant=\"body2\" \n              component=\"pre\" \n              style={{ \n                marginTop: '10px',\n                padding: '10px',\n                backgroundColor: '#f5f5f5',\n                overflowX: 'auto',\n                fontSize: '0.8rem'\n              }}\n            >\n              {message.diff}\n            </Typography>\n          </Box>\n        )}\n      </Paper>\n    );\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh', maxWidth: '800px', mx: 'auto' }}>\n      <Typography variant=\"h4\" sx={{ p: 2, borderBottom: '1px solid #e0e0e0' }}>\n        Aider Browser\n      </Typography>\n      \n      {isInitializing ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flex: 1 }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <>\n          <Box sx={{ flex: 1, p: 2, overflowY: 'auto' }}>\n            {messages.map(renderMessage)}\n            \n            {streamingContent && (\n              <Paper elevation={1} style={{ \n                padding: '10px 15px', \n                marginBottom: '10px',\n                backgroundColor: '#f1f8e9',\n              }}>\n                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                  ASSISTANT\n                </Typography>\n                <Typography variant=\"body1\" style={{ whiteSpace: 'pre-wrap' }}>\n                  {streamingContent}\n                </Typography>\n              </Paper>\n            )}\n            \n            <div ref={messagesEndRef} />\n          </Box>\n          \n          <Divider />\n          \n          <Box component=\"form\" onSubmit={handleSendMessage} sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message here...\"\n              disabled={isLoading}\n            />\n            <IconButton \n              type=\"submit\" \n              color=\"primary\" \n              disabled={isLoading || !input.trim()}\n              sx={{ ml: 1 }}\n            >\n              {isLoading ? <CircularProgress size={24} /> : <SendIcon />}\n            </IconButton>\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
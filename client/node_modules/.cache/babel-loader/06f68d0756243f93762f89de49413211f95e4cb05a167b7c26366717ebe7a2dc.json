{"ast":null,"code":"import axios from 'axios';\nimport io from 'socket.io-client';\nimport { v4 as uuidv4 } from 'uuid';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst SESSION_ID = localStorage.getItem('sessionId') || `session_${uuidv4()}`;\n\n// Store session ID for future use\nif (!localStorage.getItem('sessionId')) {\n  localStorage.setItem('sessionId', SESSION_ID);\n}\n\n// Socket.io connection\nexport const socket = io(API_URL.replace('/api', ''), {\n  transports: ['websocket'],\n  reconnection: true,\n  reconnectionDelay: 1000,\n  reconnectionAttempts: 10\n});\nsocket.on('connect', () => {\n  console.log('Connected to socket server');\n});\nsocket.on('error', error => {\n  console.error('Socket error:', error);\n});\nsocket.on('disconnect', () => {\n  console.log('Disconnected from socket server');\n});\n\n// API service\nconst api = {\n  // Initialize a session\n  initSession: async () => {\n    try {\n      const response = await axios.post(`${API_URL}/init`, {\n        session_id: SESSION_ID\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error initializing session:', error);\n      throw error;\n    }\n  },\n  // Send a message to Aider\n  sendMessage: async message => {\n    try {\n      const response = await axios.post(`${API_URL}/send_message`, {\n        session_id: SESSION_ID,\n        message\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error sending message:', error);\n      throw error;\n    }\n  },\n  // Get file lists\n  getFiles: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/get_files`, {\n        params: {\n          session_id: SESSION_ID\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error getting files:', error);\n      throw error;\n    }\n  },\n  // Add a file to the chat\n  addFile: async filename => {\n    try {\n      const response = await axios.post(`${API_URL}/add_files`, {\n        session_id: SESSION_ID,\n        files: [filename]\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding file:', error);\n      throw error;\n    }\n  },\n  // Remove a file from the chat\n  removeFile: async filename => {\n    try {\n      const response = await axios.post(`${API_URL}/remove_files`, {\n        session_id: SESSION_ID,\n        files: [filename]\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error removing file:', error);\n      throw error;\n    }\n  },\n  // Add a web page to the chat\n  addWebPage: async url => {\n    try {\n      const response = await axios.post(`${API_URL}/add_web_page`, {\n        session_id: SESSION_ID,\n        url\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding web page:', error);\n      throw error;\n    }\n  },\n  // Undo a commit\n  undoCommit: async commitHash => {\n    try {\n      const response = await axios.post(`${API_URL}/undo_commit`, {\n        session_id: SESSION_ID,\n        commit_hash: commitHash\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error undoing commit:', error);\n      throw error;\n    }\n  },\n  // Clear chat history\n  clearHistory: async () => {\n    try {\n      const response = await axios.post(`${API_URL}/clear_history`, {\n        session_id: SESSION_ID\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error clearing history:', error);\n      throw error;\n    }\n  },\n  // Generate a PRD\n  generatePRD: async description => {\n    try {\n      const response = await axios.post(`${API_URL}/generate_prd`, {\n        session_id: SESSION_ID,\n        description\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error generating PRD:', error);\n      throw error;\n    }\n  },\n  // Generate tasks from a PRD\n  generateTasks: async prd => {\n    try {\n      const response = await axios.post(`${API_URL}/generate_tasks`, {\n        session_id: SESSION_ID,\n        prd\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error generating tasks:', error);\n      throw error;\n    }\n  },\n  // Execute tasks\n  executeTasks: async tasks => {\n    try {\n      const response = await axios.post(`${API_URL}/execute_tasks`, {\n        session_id: SESSION_ID,\n        tasks\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error executing tasks:', error);\n      throw error;\n    }\n  },\n  // Get task status\n  getTaskStatus: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/task_status`, {\n        params: {\n          session_id: SESSION_ID\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error getting task status:', error);\n      throw error;\n    }\n  }\n};\nexport { SESSION_ID };\nexport default api;","map":{"version":3,"names":["axios","io","v4","uuidv4","API_URL","process","env","REACT_APP_API_URL","SESSION_ID","localStorage","getItem","setItem","socket","replace","transports","reconnection","reconnectionDelay","reconnectionAttempts","on","console","log","error","api","initSession","response","post","session_id","data","sendMessage","message","getFiles","get","params","addFile","filename","files","removeFile","addWebPage","url","undoCommit","commitHash","commit_hash","clearHistory","generatePRD","description","generateTasks","prd","executeTasks","tasks","getTaskStatus"],"sources":["/Users/gerardosuarez/Documents/aider-source-code/aider/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport io from 'socket.io-client';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst SESSION_ID = localStorage.getItem('sessionId') || `session_${uuidv4()}`;\n\n// Store session ID for future use\nif (!localStorage.getItem('sessionId')) {\n  localStorage.setItem('sessionId', SESSION_ID);\n}\n\n// Socket.io connection\nexport const socket = io(API_URL.replace('/api', ''), {\n  transports: ['websocket'],\n  reconnection: true,\n  reconnectionDelay: 1000,\n  reconnectionAttempts: 10\n});\n\nsocket.on('connect', () => {\n  console.log('Connected to socket server');\n});\n\nsocket.on('error', (error) => {\n  console.error('Socket error:', error);\n});\n\nsocket.on('disconnect', () => {\n  console.log('Disconnected from socket server');\n});\n\n// API service\nconst api = {\n  // Initialize a session\n  initSession: async () => {\n    try {\n      const response = await axios.post(`${API_URL}/init`, {\n        session_id: SESSION_ID\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error initializing session:', error);\n      throw error;\n    }\n  },\n\n  // Send a message to Aider\n  sendMessage: async (message) => {\n    try {\n      const response = await axios.post(`${API_URL}/send_message`, {\n        session_id: SESSION_ID,\n        message\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error sending message:', error);\n      throw error;\n    }\n  },\n\n  // Get file lists\n  getFiles: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/get_files`, {\n        params: { session_id: SESSION_ID }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error getting files:', error);\n      throw error;\n    }\n  },\n\n  // Add a file to the chat\n  addFile: async (filename) => {\n    try {\n      const response = await axios.post(`${API_URL}/add_files`, {\n        session_id: SESSION_ID,\n        files: [filename]\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding file:', error);\n      throw error;\n    }\n  },\n\n  // Remove a file from the chat\n  removeFile: async (filename) => {\n    try {\n      const response = await axios.post(`${API_URL}/remove_files`, {\n        session_id: SESSION_ID,\n        files: [filename]\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error removing file:', error);\n      throw error;\n    }\n  },\n\n  // Add a web page to the chat\n  addWebPage: async (url) => {\n    try {\n      const response = await axios.post(`${API_URL}/add_web_page`, {\n        session_id: SESSION_ID,\n        url\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding web page:', error);\n      throw error;\n    }\n  },\n\n  // Undo a commit\n  undoCommit: async (commitHash) => {\n    try {\n      const response = await axios.post(`${API_URL}/undo_commit`, {\n        session_id: SESSION_ID,\n        commit_hash: commitHash\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error undoing commit:', error);\n      throw error;\n    }\n  },\n\n  // Clear chat history\n  clearHistory: async () => {\n    try {\n      const response = await axios.post(`${API_URL}/clear_history`, {\n        session_id: SESSION_ID\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error clearing history:', error);\n      throw error;\n    }\n  },\n\n  // Generate a PRD\n  generatePRD: async (description) => {\n    try {\n      const response = await axios.post(`${API_URL}/generate_prd`, {\n        session_id: SESSION_ID,\n        description\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error generating PRD:', error);\n      throw error;\n    }\n  },\n\n  // Generate tasks from a PRD\n  generateTasks: async (prd) => {\n    try {\n      const response = await axios.post(`${API_URL}/generate_tasks`, {\n        session_id: SESSION_ID,\n        prd\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error generating tasks:', error);\n      throw error;\n    }\n  },\n\n  // Execute tasks\n  executeTasks: async (tasks) => {\n    try {\n      const response = await axios.post(`${API_URL}/execute_tasks`, {\n        session_id: SESSION_ID,\n        tasks\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error executing tasks:', error);\n      throw error;\n    }\n  },\n\n  // Get task status\n  getTaskStatus: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/task_status`, {\n        params: { session_id: SESSION_ID }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error getting task status:', error);\n      throw error;\n    }\n  }\n};\n\nexport { SESSION_ID };\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
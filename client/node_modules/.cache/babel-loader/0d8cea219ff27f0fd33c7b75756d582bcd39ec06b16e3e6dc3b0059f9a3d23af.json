{"ast":null,"code":"var _jsxFileName = \"/Users/gerardosuarez/Documents/aider-source-code/aider/client/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport socketIOClient from 'socket.io-client';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestConnection = () => {\n  _s();\n  const [apiStatus, setApiStatus] = useState(null);\n  const [socketStatus, setSocketStatus] = useState('disconnected');\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Test HTTP endpoint\n    const testApiConnection = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/test_connection');\n        const data = await response.json();\n        setApiStatus(data);\n      } catch (error) {\n        setApiStatus({\n          status: 'error',\n          message: error.message\n        });\n      }\n    };\n\n    // Initialize Socket.IO connection\n    const socket = socketIOClient('http://localhost:5000');\n    setSocket(socket);\n    socket.on('connect', () => {\n      setSocketStatus('connected');\n      console.log('Socket.IO connected');\n    });\n    socket.on('disconnect', () => {\n      setSocketStatus('disconnected');\n      console.log('Socket.IO disconnected');\n    });\n    socket.on('test_response', data => {\n      console.log('Received test response:', data);\n      setMessages(prev => [...prev, data]);\n    });\n    testApiConnection();\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const sendTestMessage = () => {\n    if (socket) {\n      socket.emit('test_message', {\n        session_id: 'test_session',\n        message: 'Hello from client!'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"HTTP API Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(apiStatus, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Socket.IO Status: \", socketStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTestMessage,\n        disabled: socketStatus !== 'connected',\n        children: \"Send Test Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Received Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(msg, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(TestConnection, \"5dWQHsYc6IEhbrfJo0HGScP7VTw=\");\n_c = TestConnection;\nconst root = createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(TestConnection, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 5\n}, this));\nvar _c;\n$RefreshReg$(_c, \"TestConnection\");","map":{"version":3,"names":["React","useEffect","useState","createRoot","socketIOClient","App","jsxDEV","_jsxDEV","TestConnection","_s","apiStatus","setApiStatus","socketStatus","setSocketStatus","messages","setMessages","socket","setSocket","testApiConnection","response","fetch","data","json","error","status","message","on","console","log","prev","disconnect","sendTestMessage","emit","session_id","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","JSON","stringify","onClick","disabled","map","msg","index","_c","root","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["/Users/gerardosuarez/Documents/aider-source-code/aider/client/src/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport socketIOClient from 'socket.io-client';\nimport App from './App';\n\nconst TestConnection = () => {\n    const [apiStatus, setApiStatus] = useState(null);\n    const [socketStatus, setSocketStatus] = useState('disconnected');\n    const [messages, setMessages] = useState([]);\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        // Test HTTP endpoint\n        const testApiConnection = async () => {\n            try {\n                const response = await fetch('http://localhost:5000/api/test_connection');\n                const data = await response.json();\n                setApiStatus(data);\n            } catch (error) {\n                setApiStatus({ status: 'error', message: error.message });\n            }\n        };\n\n        // Initialize Socket.IO connection\n        const socket = socketIOClient('http://localhost:5000');\n        setSocket(socket);\n\n        socket.on('connect', () => {\n            setSocketStatus('connected');\n            console.log('Socket.IO connected');\n        });\n\n        socket.on('disconnect', () => {\n            setSocketStatus('disconnected');\n            console.log('Socket.IO disconnected');\n        });\n\n        socket.on('test_response', (data) => {\n            console.log('Received test response:', data);\n            setMessages(prev => [...prev, data]);\n        });\n\n        testApiConnection();\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    const sendTestMessage = () => {\n        if (socket) {\n            socket.emit('test_message', {\n                session_id: 'test_session',\n                message: 'Hello from client!'\n            });\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h2>Connection Test</h2>\n            \n            <div style={{ marginBottom: '20px' }}>\n                <h3>HTTP API Status:</h3>\n                <pre>{JSON.stringify(apiStatus, null, 2)}</pre>\n            </div>\n\n            <div style={{ marginBottom: '20px' }}>\n                <h3>Socket.IO Status: {socketStatus}</h3>\n                <button onClick={sendTestMessage} disabled={socketStatus !== 'connected'}>\n                    Send Test Message\n                </button>\n            </div>\n\n            <div>\n                <h3>Received Messages:</h3>\n                <ul>\n                    {messages.map((msg, index) => (\n                        <li key={index}>\n                            <pre>{JSON.stringify(msg, null, 2)}</pre>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <TestConnection />\n        <App />\n    </React.StrictMode>\n); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}